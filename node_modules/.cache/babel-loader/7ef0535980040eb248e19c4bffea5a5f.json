{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass ChannelForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const className = \"field \".concat(meta.error && meta.touched ? 'error' : '');\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"name\",\n      component: this.renderInput,\n      label: \"Enter Your Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"body\",\n      component: this.renderInput,\n      label: \"Enter Your Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.body) {\n    errors.body = 'You must enter a body';\n  }\n\n  if (!formValues.name) {\n    errors.name = 'You must enter a name';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'channelForm',\n  validate: validate\n})(ChannelForm);","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelForm.js"],"names":["React","Field","reduxForm","ChannelForm","Component","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","render","handleSubmit","validate","errors","body","name","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAYzCC,WAZyC,GAY3B,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,KAA0B;AACvC,YAAMC,SAAS,mBAAYD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAsC,EAAlD,CAAf;AACA,aACC;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADD,EAEC,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,EAGE,KAAKM,WAAL,CAAiBJ,IAAjB,CAHF,CADD;AAOA,KArBwC;;AAAA,SAuBzCK,QAvByC,GAuB7BC,UAAD,IAAgB;AAC1B,WAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB;AACA,KAzBwC;AAAA;;AACzCF,EAAAA,WAAW,CAAC;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAmB;AAC7B,QAAGA,OAAO,IAAID,KAAd,EAAqB;AACpB,aACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,KAAzB,CADD,CADD;AAKA;AACD;;AAkBDM,EAAAA,MAAM,GAAG;AACR,WACC;AAAM,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,YAAX,CAAwB,KAAKJ,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAE,KAAKR,WAAnC;AAAgD,MAAA,KAAK,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAE,KAAKA,WAAnC;AAAgD,MAAA,KAAK,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHH,CADD;AAOA;;AAnCwC;;AAsC1C,MAAMa,QAAQ,GAAIJ,UAAD,IAAgB;AAChC,QAAMK,MAAM,GAAG,EAAf;;AACA,MAAG,CAACL,UAAU,CAACM,IAAf,EAAqB;AACpBD,IAAAA,MAAM,CAACC,IAAP,GAAc,uBAAd;AACA;;AAED,MAAG,CAACN,UAAU,CAACO,IAAf,EAAqB;AACpBF,IAAAA,MAAM,CAACE,IAAP,GAAc,uBAAd;AACA;;AACD,SAAOF,MAAP;AACA,CAVD;;AAYA,eAAejB,SAAS,CAAC;AACxBoB,EAAAA,IAAI,EAAE,aADkB;AAEtBJ,EAAAA,QAAQ,EAAEA;AAFY,CAAD,CAAT,CAGZf,WAHY,CAAf","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\n\nclass ChannelForm extends React.Component {\n\trenderError({error, touched}) {\n\t\tif(touched && error) {\n\t\t\treturn (\n\t\t\t\t<div className=\"ui error message\">\n\t\t\t\t\t<div className=\"header\">{error}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t\n\n\trenderInput = ({input, label, meta}) => {\n\t\tconst className = `field ${meta.error && meta.touched ? 'error': '' }`;\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<label>{label}</label>\n\t\t\t\t<input {...input} autoComplete=\"off\" />\n\t\t\t\t{this.renderError(meta)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tonSubmit = (formValues) => {\n\t\tthis.props.onSubmit(formValues); \n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n\t\t\t\t  <Field name=\"name\" component={this.renderInput} label=\"Enter Your Name\" />\n\t\t\t\t  <Field name=\"body\" component={this.renderInput} label=\"Enter Your Body\" />\n\t\t\t\t  <button className=\"ui button primary\">Submit</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst validate = (formValues) => {\n\tconst errors = {};\n\tif(!formValues.body) {\n\t\terrors.body = 'You must enter a body';\n\t}\n\n\tif(!formValues.name) {\n\t\terrors.name = 'You must enter a name';\n\t}\n\treturn errors;\n};\n\nexport default reduxForm({\n\tform: 'channelForm',\n  \tvalidate: validate\n})(ChannelForm);"]},"metadata":{},"sourceType":"module"}