{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ReplyList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchReplies } from '../actions';\n\nclass ReplyList extends React.Component {\n  componentDidMount() {\n    this.props.fetchReplies(this.props.id);\n  }\n\n  renderList() {\n    return this.props.replies.map(reply => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: reply.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, reply.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, reply.body))));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui relaxed divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    replies: Object.values(state.replies)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchReplies\n})(ReplyList);","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ReplyList.js"],"names":["React","connect","fetchReplies","ReplyList","Component","componentDidMount","props","id","renderList","replies","map","reply","name","body","render","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,YAA3B;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACvCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWJ,YAAX,CAAwB,KAAKI,KAAL,CAAWC,EAAnC;AACA;;AAEDC,EAAAA,UAAU,GAAG;AACZ,WAAO,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAuBC,KAAK,IAAI;AACtC,aACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,KAAK,CAACJ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAII,KAAK,CAACC,IAAV,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,KAAK,CAACE,IAAV,CAFD,CADD,CADD,CADD;AAUA,KAXM,CAAP;AAYA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKN,UAAL,EAA1C,CADD,CADD;AAKA;;AA1BsC;;AA6BxC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB;AADH,GAAP;AAGA,CAJD;;AAMA,eAAeR,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA0CC,SAA1C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchReplies} from '../actions';\n\nclass ReplyList extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchReplies(this.props.id);\n\t}\n\n\trenderList() {\n\t\treturn this.props.replies.map(reply => {\n\t\t\treturn (\n\t\t\t\t<div className=\"item\" key={reply.id}>\n\t\t\t\t\t<div className=\"comment\">\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<p>{reply.name}</p>\n\t\t\t\t\t\t\t<p>{reply.body}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"ui relaxed divided list\">{this.renderList()}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\treplies: Object.values(state.replies)\n\t};\n}\n\nexport default connect(mapStateToProps, {fetchReplies}) (ReplyList);"]},"metadata":{},"sourceType":"module"}