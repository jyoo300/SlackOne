{"ast":null,"code":"import _defineProperty from \"/Users/johnyoo/Desktop/MyProjects/slackone/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport channels from '../apis/channels';\nimport _ from 'lodash';\nimport history from '../history';\nexport const createChannel = formValues => async dispatch => {\n  const response = await channels.post('/channels', _objectSpread({}, formValues));\n  dispatch({\n    type: 'CREATE_CHANNEL',\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchPost = () => async dispatch => {\n  const response = await channels.get('/channels');\n  dispatch({\n    type: 'FETCH_CHANNEL',\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/actions/index.js"],"names":["channels","_","history","createChannel","formValues","dispatch","response","post","type","payload","data","push","fetchPost","get"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,aAAa,GAAIC,UAAD,IAAgB,MAAOC,QAAP,IAAoB;AAChE,QAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,CAAc,WAAd,oBAA+BH,UAA/B,EAAvB;AACAC,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,gBAAP;AAAyBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA3C,GAAD,CAAR;AACAR,EAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACA,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACa,GAAT,CAAa,WAAb,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,eAAP;AAAwBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA1C,GAAD,CAAR;AACA,CAHM","sourcesContent":["import channels from '../apis/channels';\nimport _ from 'lodash';\nimport history from '../history';\n\nexport const createChannel = (formValues) => async (dispatch) => {\n\tconst response = await channels.post('/channels', {...formValues});\n\tdispatch({type: 'CREATE_CHANNEL', payload: response.data});\n\thistory.push('/');\n};\n\nexport const fetchPost = () => async dispatch => {\n\tconst response = await channels.get('/channels');\n\tdispatch({type: 'FETCH_CHANNEL', payload: response.data}) \n};"]},"metadata":{},"sourceType":"module"}