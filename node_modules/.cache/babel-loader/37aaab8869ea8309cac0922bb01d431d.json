{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/slackone/src/components/messages/ChatFeature.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport Input from './Input';\n\nclass ChatFeature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      currentRoom: {\n        users: []\n      },\n      messages: [],\n      users: []\n    };\n    this.addMessage = this.addMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: \"v1:us1:c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf\",\n      userId: this.props.currentId,\n      tokenProvider: new TokenProvider({\n        url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf/token\"\n      })\n    });\n  }\n\n  addMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    }).catch(error => console.error('error', error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = ownProps => {\n  return {\n    id: [ownProps.match.params.roomId]\n  };\n};\n\nexport default connect(mapStateToProps)(ChatFeature);","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/components/messages/ChatFeature.js"],"names":["React","connect","ChatManager","TokenProvider","Input","ChatFeature","Component","constructor","props","state","currentUser","currentRoom","users","messages","addMessage","bind","componentDidMount","chatManager","instanceLocator","userId","currentId","tokenProvider","url","text","sendMessage","roomId","id","catch","error","console","render","mapStateToProps","ownProps","match","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACHC,MAAAA,WAAW,EAAE,IADV;AAEHC,MAAAA,WAAW,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAFV;AAGHC,MAAAA,QAAQ,EAAE,EAHP;AAIHD,MAAAA,KAAK,EAAE;AAJJ,KAAb;AAMM,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACN;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,WAAW,GAAG,IAAIf,WAAJ,CAAgB;AAC1BgB,MAAAA,eAAe,EAAE,6CADS;AAE1BC,MAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,SAFO;AAG1BC,MAAAA,aAAa,EAAE,IAAIlB,aAAJ,CAAkB;AAC7BmB,QAAAA,GAAG,EAAE;AADwB,OAAlB;AAHW,KAAhB,CAApB;AAOA;;AAEDR,EAAAA,UAAU,CAACS,IAAD,EAAO;AACV,SAAKd,KAAL,CAAWC,WAAX,CAAuBc,WAAvB,CAAmC;AAC/BD,MAAAA,IAD+B;AAE/BE,MAAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWE,WAAX,CAAuBe;AAFA,KAAnC,EAICC,KAJD,CAIOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAJhB;AAKH;;AAEJE,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAKA;;AApCwC;;AAuC1C,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACrC,SAAO;AAACN,IAAAA,EAAE,EAAE,CAACM,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBT,MAAvB;AAAL,GAAP;AACA,CAFD;;AAIA,eAAexB,OAAO,CAAC8B,eAAD,CAAP,CAA0B1B,WAA1B,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport Input from './Input';\n\nclass ChatFeature extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            currentUser: null,\n            currentRoom: {users:[]},\n            messages: [],\n            users: []\n        }\n        this.addMessage = this.addMessage.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst chatManager = new ChatManager({\n            instanceLocator: \"v1:us1:c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf\",\n            userId: this.props.currentId,\n            tokenProvider: new TokenProvider({\n                url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf/token\"\n            })\n        })\n\t}\n\n\taddMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (ownProps) => {\n\treturn {id: [ownProps.match.params.roomId]};\n};\n\nexport default connect(mapStateToProps) (ChatFeature);"]},"metadata":{},"sourceType":"module"}