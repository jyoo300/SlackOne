{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchChannel } from '../actions';\nimport ChannelList from './ChannelList';\nimport PostCreate from './PostCreate';\nimport PostList from './PostList';\nimport './NavBar.css';\n\nclass ChannelShow extends React.Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchChannel(id);\n  }\n\n  render() {\n    if (!this.props.channel) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$props$channel = this.props.channel,\n          name = _this$props$channel.name,\n          body = _this$props$channel.body;\n    const id = this.props.match.params.id;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(ChannelList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"ui horizontal divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, body)), React.createElement(\"div\", {\n      className: \"ui comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"ui dividing header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Posts\"), React.createElement(PostList, {\n      id: this.props.channel.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(PostCreate, {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    channel: state.channels2[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchChannel\n})(ChannelShow);","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelShow.js"],"names":["React","connect","fetchChannel","ChannelList","PostCreate","PostList","ChannelShow","Component","componentDidMount","id","props","match","params","render","channel","name","body","mapStateToProps","state","ownProps","channels2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACxCC,EAAAA,iBAAiB,GAAG;AAAA,UACXC,EADW,GACL,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADZ,CACXH,EADW;AAElB,SAAKC,KAAL,CAAWR,YAAX,CAAwBO,EAAxB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKH,KAAL,CAAWI,OAAhB,EAAyB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAHM,gCAKgB,KAAKJ,KAAL,CAAWI,OAL3B;AAAA,UAKCC,IALD,uBAKCA,IALD;AAAA,UAKOC,IALP,uBAKOA,IALP;AAAA,UAOAP,EAPA,GAOM,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAPvB,CAOAH,EAPA;AASP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCM,IAAvC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,IAAJ,CAFF,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKN,KAAL,CAAWI,OAAX,CAAmBL,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALJ,EASI,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAEA,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAFF,CADF;AAgBD;;AA/BuC;;AAkC1C,MAAMQ,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEL,IAAAA,OAAO,EAAEI,KAAK,CAACE,SAAN,CAAgBD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBH,EAAtC;AAAX,GAAP;AACD,CAFD;;AAIA,eAAeR,OAAO,CACpBgB,eADoB,EAEpB;AAAEf,EAAAA;AAAF,CAFoB,CAAP,CAGbI,WAHa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchChannel} from '../actions';\nimport ChannelList from './ChannelList';\nimport PostCreate from './PostCreate';\nimport PostList from './PostList';\nimport './NavBar.css';\n\nclass ChannelShow extends React.Component {\n  componentDidMount() {\n    const {id} = this.props.match.params;\n    this.props.fetchChannel(id);\n  }\n\n  render() {\n    if (!this.props.channel) {\n        return <div>Loading...</div>;\n    }\n\n    const { name, body } = this.props.channel;\n\n    const {id} = this.props.match.params;\n\n    return (\n      <div>\n        <ChannelList />\n        <div className=\"center\">\n            <div className=\"ui segment\">\n              <h1 className=\"ui horizontal divider\">{name}</h1>\n              <p>{body}</p>\n            </div>\n            <div className=\"ui comments\">\n              <h3 className=\"ui dividing header\">Posts</h3>\n              <PostList id={this.props.channel.id} />\n            </div>\n            <PostCreate id={id} />\n          </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { channel: state.channels2[ownProps.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchChannel }\n)(ChannelShow);"]},"metadata":{},"sourceType":"module"}