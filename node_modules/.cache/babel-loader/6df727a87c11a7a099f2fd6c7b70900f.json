{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchChannel } from '../actions';\nimport { Link } from 'react-router-dom';\nimport ChannelList from './ChannelList';\n\nclass ChannelShow extends React.Component {\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.fetchChannel(id);\n  }\n\n  render() {\n    if (!this.props.channel) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$props$channel = this.props.channel,\n          name = _this$props$channel.name,\n          body = _this$props$channel.body;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(ChannelList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, body), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Posts\"));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    channel: state.channels[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchChannel\n})(ChannelShow);","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelShow.js"],"names":["React","connect","fetchChannel","Link","ChannelList","ChannelShow","Component","componentDidMount","id","props","match","params","render","channel","name","body","mapStateToProps","state","ownProps","channels"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,iBAAiB,GAAG;AAAA,UACXC,EADW,GACL,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADZ,CACXH,EADW;AAElB,SAAKC,KAAL,CAAWP,YAAX,CAAwBM,EAAxB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKH,KAAL,CAAWI,OAAhB,EAAyB;AACnB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AAHI,gCAKgB,KAAKJ,KAAL,CAAWI,OAL3B;AAAA,UAKCC,IALD,uBAKCA,IALD;AAAA,UAKOC,IALP,uBAKOA,IALP;AAOP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,IAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CADF;AAQD;;AArBuC;;AAwB1C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEL,IAAAA,OAAO,EAAEI,KAAK,CAACE,QAAN,CAAeD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBH,EAArC;AAAX,GAAP;AACD,CAFD;;AAIA,eAAeP,OAAO,CACpBe,eADoB,EAEpB;AAAEd,EAAAA;AAAF,CAFoB,CAAP,CAGbG,WAHa,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchChannel} from '../actions';\nimport {Link} from 'react-router-dom';\nimport ChannelList from './ChannelList';\n\nclass ChannelShow extends React.Component {\n  componentDidMount() {\n    const {id} = this.props.match.params;\n    this.props.fetchChannel(id);\n  }\n\n  render() {\n    if (!this.props.channel) {\n          return <div>Loading...</div>;\n      }\n\n    const { name, body } = this.props.channel;\n\n    return (\n      <div>\n        <ChannelList />\n        <h4>{name}</h4>\n        <p>{body}</p>\n        <h1>Posts</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { channel: state.channels[ownProps.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchChannel }\n)(ChannelShow);"]},"metadata":{},"sourceType":"module"}