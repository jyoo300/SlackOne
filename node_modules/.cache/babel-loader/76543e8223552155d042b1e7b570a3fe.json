{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/slackone/src/components/messages/ChatFeature.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\n\nclass ChatFeature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      currentRoom: {\n        users: []\n      },\n      messages: [],\n      users: []\n    };\n    this.addMessage = this.addMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new ChatManager({\n      instanceLocator: \"v1:us1:c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf\",\n      userId: this.props.id,\n      tokenProvider: new TokenProvider({\n        url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf/token\"\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.setState({\n        currentUser: currentUser\n      });\n      return currentUser.subscribeToRoom({\n        roomId: \"aa1b71eb-7b3e-45e7-a719-e6a267a9b729\",\n        messageLimit: 100,\n        hooks: {\n          onMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      });\n    }).then(currentRoom => {\n      this.setState({\n        currentRoom,\n        users: currentRoom.userIds\n      });\n    }).catch(error => console.log(error));\n  }\n\n  addMessage(text) {\n    this.state.currentUser.sendMessage({\n      text,\n      roomId: this.state.currentRoom.id\n    }).catch(error => console.error('error', error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Hi There!\"), React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ownProps => {\n  return {\n    id: [ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps)(ChatFeature);","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/components/messages/ChatFeature.js"],"names":["React","connect","ChatManager","TokenProvider","MessageList","Input","ChatFeature","Component","constructor","props","state","currentUser","currentRoom","users","messages","addMessage","bind","componentDidMount","chatManager","instanceLocator","userId","id","tokenProvider","url","then","setState","subscribeToRoom","roomId","messageLimit","hooks","onMessage","message","userIds","catch","error","console","log","text","sendMessage","render","mapStateToProps","ownProps","match","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACHC,MAAAA,WAAW,EAAE,IADV;AAEHC,MAAAA,WAAW,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAFV;AAGHC,MAAAA,QAAQ,EAAE,EAHP;AAIHD,MAAAA,KAAK,EAAE;AAJJ,KAAb;AAMM,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACN;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,WAAW,GAAG,IAAIhB,WAAJ,CAAgB;AAC1BiB,MAAAA,eAAe,EAAE,6CADS;AAE1BC,MAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWY,EAFO;AAG1BC,MAAAA,aAAa,EAAE,IAAInB,aAAJ,CAAkB;AAC7BoB,QAAAA,GAAG,EAAE;AADwB,OAAlB;AAHW,KAAhB,CAApB;AAQML,IAAAA,WAAW,CAACjB,OAAZ,GACCuB,IADD,CACMb,WAAW,IAAI;AACjB,WAAKc,QAAL,CAAc;AAAEd,QAAAA,WAAW,EAAEA;AAAf,OAAd;AACA,aAAOA,WAAW,CAACe,eAAZ,CAA4B;AAC/BC,QAAAA,MAAM,EAAE,sCADuB;AAE/BC,QAAAA,YAAY,EAAE,GAFiB;AAG/BC,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAEC,OAAO,IAAI;AAClB,iBAAKN,QAAL,CAAc;AACVX,cAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,QAAf,EAAyBiB,OAAzB;AADA,aAAd;AAGH;AALE;AAHwB,OAA5B,CAAP;AAWH,KAdD,EAgBCP,IAhBD,CAgBMZ,WAAW,IAAI;AACjB,WAAKa,QAAL,CAAc;AACVb,QAAAA,WADU;AAEVC,QAAAA,KAAK,EAAED,WAAW,CAACoB;AAFT,OAAd;AAIH,KArBD,EAsBCC,KAtBD,CAsBOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAtBhB;AAuBN;;AAEDnB,EAAAA,UAAU,CAACsB,IAAD,EAAO;AACV,SAAK3B,KAAL,CAAWC,WAAX,CAAuB2B,WAAvB,CAAmC;AAC/BD,MAAAA,IAD+B;AAE/BV,MAAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWE,WAAX,CAAuBS;AAFA,KAAnC,EAICY,KAJD,CAIOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAJhB;AAKH;;AAEJK,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWI,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD;AAMA;;AA7DwC;;AAgE1C,MAAM0B,eAAe,GAAIC,QAAD,IAAc;AACrC,SAAO;AAACpB,IAAAA,EAAE,EAAE,CAACoB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBtB,EAAvB;AAAL,GAAP;AACA,CAFD;;AAIA,eAAepB,OAAO,CAACuC,eAAD,CAAP,CAA0BlC,WAA1B,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './MessageList';\nimport Input from './Input';\n\nclass ChatFeature extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            currentUser: null,\n            currentRoom: {users:[]},\n            messages: [],\n            users: []\n        }\n        this.addMessage = this.addMessage.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst chatManager = new ChatManager({\n            instanceLocator: \"v1:us1:c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf\",\n            userId: this.props.id,\n            tokenProvider: new TokenProvider({\n                url: \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf/token\"\n            })\n        })\n\n        chatManager.connect()\n        .then(currentUser => {\n            this.setState({ currentUser: currentUser })\n            return currentUser.subscribeToRoom({\n                roomId: \"aa1b71eb-7b3e-45e7-a719-e6a267a9b729\",\n                messageLimit: 100,\n                hooks: {\n                    onMessage: message => {\n                        this.setState({\n                            messages: [...this.state.messages, message],\n                        })\n                    },\n                 }\n            })\n        })\n\n        .then(currentRoom => {\n            this.setState({\n                currentRoom,\n                users: currentRoom.userIds\n            })\n        })\n        .catch(error => console.log(error))\n\t}\n\n\taddMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id\n        })\n        .catch(error => console.error('error', error));\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className=\"header\">Hi There!</h2>\n\t\t\t\t <MessageList messages={this.state.messages} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (ownProps) => {\n\treturn {id: [ownProps.match.params.id]};\n};\n\nexport default connect(mapStateToProps) (ChatFeature);"]},"metadata":{},"sourceType":"module"}