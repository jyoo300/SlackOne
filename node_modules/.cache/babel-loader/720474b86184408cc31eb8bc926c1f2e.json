{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchChannels } from '../actions';\nimport { Link } from 'react-router-dom';\nimport nextId from 'react-id-generator';\nimport { Menu, Sidebar } from 'semantic-ui-react';\nimport Header from './Header';\nimport './NavBar.css';\n\nconst Chatkit = require(\"@pusher/chatkit-server\");\n\nconst chatkit = new Chatkit.default({\n  instanceLocator: \"v1:us1:c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf\",\n  key: \"5d11d1c5-683f-4acb-872a-560402e35679:XWcKjCMuD4BbPMsmK52ivr/jqJcY8f8OQ5a2gcs8uL8=\"\n});\n\nclass ChannelList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUsername: '',\n      currentId: '',\n      animation: 'push',\n      direction: 'left',\n      dimmed: false,\n      visible: true\n    };\n    this.createUser = this.createUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchChannels();\n  }\n\n  createUser() {\n    chatkit.createUser({\n      id: \"User102\",\n      name: \"User102\"\n    }).then(currentUser => {\n      this.setState({\n        currentUsername: \"User102\",\n        currentId: \"User102\"\n      });\n    });\n  }\n\n  renderList() {\n    return this.props.channels.map(channel => {\n      const id = nextId();\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/channels/\".concat(channel.id),\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"#\", channel.name)))));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Sidebar.Pusher, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      as: Menu,\n      animation: this.state.animation,\n      direction: this.state.direction,\n      icon: \"labeled\",\n      inverted: true,\n      visible: this.state.visible,\n      vertical: true,\n      width: \"thin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.renderList(), React.createElement(Link, {\n      to: \"/channels/new\",\n      className: \"ui button primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Create New Channel\")))), this.createUser());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    channels: Object.values(state.posts)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchChannels\n})(ChannelList);","map":{"version":3,"sources":["/Users/johnyoo/Desktop/MyProjects/slackone/src/components/ChannelList.js"],"names":["React","connect","fetchChannels","Link","nextId","Menu","Sidebar","Header","Chatkit","require","chatkit","default","instanceLocator","key","ChannelList","Component","constructor","props","state","currentUsername","currentId","animation","direction","dimmed","visible","createUser","bind","componentDidMount","id","name","then","currentUser","setState","renderList","channels","map","channel","render","mapStateToProps","Object","values","posts"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchChannels} from '../actions';\nimport {Link} from 'react-router-dom';\nimport nextId from 'react-id-generator';\nimport {Menu, Sidebar} from 'semantic-ui-react';\n\nimport Header from './Header';\nimport './NavBar.css';\n\nconst Chatkit = require(\"@pusher/chatkit-server\");\nconst chatkit = new Chatkit.default({\n    instanceLocator: \"v1:us1:c5c0560a-fa96-4f39-9fc2-7e451e9bb2cf\",\n    key: \"5d11d1c5-683f-4acb-872a-560402e35679:XWcKjCMuD4BbPMsmK52ivr/jqJcY8f8OQ5a2gcs8uL8=\"\n});\n\nclass ChannelList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentUsername: '',\n\t\t\tcurrentId: '',\n\t\t\tanimation: 'push',\n\t\t\tdirection: 'left',\n\t\t\tdimmed: false,\n\t\t\tvisible: true\n\t\t}\n\t\tthis.createUser = this.createUser.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.fetchChannels();\n\t}\n\n\tcreateUser() {\n\t\tchatkit.createUser({\n\t\t\tid: \"User102\",\n\t\t\tname: \"User102\"\n\t\t})\n\t\t.then((currentUser) => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentUsername: \"User102\",\n\t\t\t\tcurrentId: \"User102\"\n\t\t\t})\n\t\t})\n\t}\n\n\trenderList() {\n\t\treturn this.props.channels.map(channel => {\n\t\t\tconst id = nextId();\n\t\t\treturn (\n\t\t\t\t<div className=\"item\" key={id}>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className=\"description\">\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t<Link to={`/channels/${channel.id}`} className=\"header\">\n\t\t\t\t\t\t\t\t\t#{channel.name}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<Header />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t<Sidebar.Pusher>\n\t\t\t\t\t\t<Sidebar\n\t\t\t\t\t\t\tas={Menu}\n\t\t\t\t\t\t\tanimation={this.state.animation}\n\t\t\t\t\t\t\tdirection={this.state.direction}\n\t\t\t\t\t\t\ticon='labeled'\n\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t\tvisible={this.state.visible}\n\t\t\t\t\t\t\tvertical\n\t\t\t\t\t\t\twidth='thin'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{this.renderList()}\n\t\t\t\t\t\t<Link to=\"/channels/new\" className=\"ui button primary\" >\n\t\t\t\t\t\t\tCreate New Channel\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Sidebar>\t\n\t\t\t\t\t</Sidebar.Pusher>\n\t\t\t\t</div>\n\t\t\t\t{this.createUser()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tchannels: Object.values(state.posts)\n\t};\n};\n\nexport default connect(mapStateToProps, {fetchChannels})(ChannelList);"]},"metadata":{},"sourceType":"module"}